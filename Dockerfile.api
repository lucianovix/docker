################  Build stage  ################
FROM node:18 AS builder

# Set working directory and increase heap size
WORKDIR /app/calcom
ENV NODE_OPTIONS="--max-old-space-size=4096"

# Build-time variables
ARG DATABASE_URL
ENV DATABASE_URL=$DATABASE_URL

# Copy the entire Cal.com source (submodule)
COPY calcom ./

# Enable corepack for Yarn
RUN corepack enable

# Install all dependencies
RUN yarn install --frozen-lockfile

# Debug: Show what's in the api v2 directory
RUN echo "=== Contents of apps/api/v2 ===" && \
    ls -la apps/api/v2/ && \
    echo "=== Package.json scripts ===" && \
    cat apps/api/v2/package.json | grep -A 10 '"scripts"'

# Debug: Try to find what build command we should use
RUN echo "=== Checking available yarn scripts ===" && \
    cd apps/api/v2 && yarn run | grep -E "(build|compile|start)" || true

# Try different build approaches
# First, try the standard NestJS build
RUN cd apps/api/v2 && \
    (yarn build || npm run build || npx nest build || echo "Standard build failed")

# Debug: Check if dist was created
RUN echo "=== Checking for dist directory ===" && \
    ls -la apps/api/v2/ | grep dist || echo "No dist directory found"

# If no dist, try building with TypeScript directly
RUN if [ ! -d "apps/api/v2/dist" ]; then \
    echo "=== Trying direct TypeScript compilation ===" && \
    cd apps/api/v2 && \
    npx tsc || echo "Direct tsc failed"; \
    fi

# Final check: what was actually built?
RUN echo "=== Final directory structure ===" && \
    find apps/api/v2 -name "*.js" -type f | head -20

################  Runtime stage  ################
FROM node:18-slim AS runner

# Install required dependencies
RUN apt-get update -y && \
    apt-get install -y openssl ca-certificates wget && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

WORKDIR /app

# Copy everything for now (we'll optimize later)
COPY --from=builder /app/calcom ./

# Set production environment
ENV NODE_ENV=production

# Expose port
EXPOSE 3000

# Debug startup
CMD ["sh", "-c", "echo '=== Looking for main.js ===' && find apps/api/v2 -name 'main.js' -type f && echo '=== Starting API ===' && node $(find apps/api/v2 -name 'main.js' -type f | head -1)"]
